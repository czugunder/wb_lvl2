package listing6

import "fmt"

func Start() {
	mymain()
}

func mymain() {
	var s = []string{"1", "2", "3"} // слайс
	modifySlice(s)                  // передается слайс s
	fmt.Println(s)
}

func modifySlice(i []string) {
	i[0] = "3"         // меняется элемент с индексом 0, тем временем подкапотный массив {1,2,3} -> {3,2,3}
	i = append(i, "4") // у i новый подкапотный массив x2 длинны текущего, массив {3,2,3} -> {3,2,3,4,0,0}
	i[1] = "5"         // подкапотный массив {3,5,3,4,0,0}
	i = append(i, "6") // расширения массива не происходит т.к. len = 5, а cap = 6, len < cap, место есть
	// Собственно по итогу все что делалось на новом подкапотном массиве никуда не идет, т.к. функция ничего не
	// возвращает, то есть на исходный подкапотный массив, а значит и на слайс s влияет только 16 строчка,
	// дальше пути i и s расходятся.
}

// 3 2 3

// В ходе работы функции modifySlice сначала изменяется подкапотный массив слайса s, он же подкапотный массив слайса i.
// Позже, в этой же функции слайс i обретает собственный подкапотный массив через функцию append, ввиду чего дальнейшие
// манипуляции над i никак не влияют на s.

// Слайс это структура, которая хранит len (длину слайса), cap (длину подкапотного массива)
// и ссылку на подкапотный массив.
// При передаче слайса как аргумента функции создается копия слайса, но указывает она на тот же подкапотный массив.
// Если нужно менять конкретно слайс из вызывающей функции, то можно передать указатель на слайс.
// Либо вернуть получившийся слайс из вызываемой функции.
